{% doc %}
  @prompt
    Create a code block that ensures the order summary section is always expanded on mobile devices. The code should target mobile viewports and override any collapse/expand functionality to keep the order summary visible at all times on smaller screens.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-order-summary-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    border: 1px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.border_radius }}px;
    padding: {{ block.settings.padding }}px;
    margin-bottom: 20px;
  }

  .ai-order-summary-header-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
    cursor: pointer;
  }

  .ai-order-summary-title-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    margin: 0;
  }

  .ai-order-summary-toggle-{{ ai_gen_id }} {
    background: none;
    border: none;
    color: {{ block.settings.text_color }};
    cursor: pointer;
    padding: 4px;
    transition: transform 0.3s ease;
  }

  .ai-order-summary-toggle-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  .ai-order-summary-content-{{ ai_gen_id }} {
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .ai-order-summary-content-{{ ai_gen_id }}.collapsed {
    max-height: 0;
  }

  .ai-order-summary-content-{{ ai_gen_id }}.expanded {
    max-height: 1000px;
  }

  .ai-order-summary-item-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: 12px 0;
    border-bottom: 1px solid {{ block.settings.border_color }};
  }

  .ai-order-summary-item-{{ ai_gen_id }}:last-child {
    border-bottom: none;
  }

  .ai-order-summary-item-details-{{ ai_gen_id }} {
    flex-grow: 1;
    margin-right: 12px;
  }

  .ai-order-summary-item-title-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: 14px;
    font-weight: 500;
    margin: 0 0 4px 0;
  }

  .ai-order-summary-item-variant-{{ ai_gen_id }} {
    color: {{ block.settings.secondary_text_color }};
    font-size: 12px;
    margin: 0 0 4px 0;
  }

  .ai-order-summary-item-quantity-{{ ai_gen_id }} {
    color: {{ block.settings.secondary_text_color }};
    font-size: 12px;
    margin: 0;
  }

  .ai-order-summary-item-price-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: 14px;
    font-weight: 500;
    flex-shrink: 0;
  }

  .ai-order-summary-totals-{{ ai_gen_id }} {
    margin-top: 16px;
    padding-top: 16px;
    border-top: 2px solid {{ block.settings.border_color }};
  }

  .ai-order-summary-total-row-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 8px;
  }

  .ai-order-summary-total-row-{{ ai_gen_id }}:last-child {
    margin-bottom: 0;
    font-weight: 600;
    font-size: 16px;
  }

  .ai-order-summary-total-label-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
  }

  .ai-order-summary-total-value-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
  }

  @media screen and (max-width: 749px) {
    .ai-order-summary-{{ ai_gen_id }} {
      position: relative;
    }

    .ai-order-summary-header-{{ ai_gen_id }} {
      cursor: default;
      pointer-events: none;
    }

    .ai-order-summary-toggle-{{ ai_gen_id }} {
      display: none !important;
    }

    .ai-order-summary-content-{{ ai_gen_id }} {
      max-height: none !important;
      overflow: visible !important;
      transition: none !important;
    }

    .ai-order-summary-content-{{ ai_gen_id }}.collapsed {
      max-height: none !important;
    }
  }

  @media screen and (min-width: 750px) {
    .ai-order-summary-header-{{ ai_gen_id }} {
      cursor: pointer;
      pointer-events: auto;
    }

    .ai-order-summary-toggle-{{ ai_gen_id }} {
      display: block;
    }
  }
{% endstyle %}

<order-summary-{{ ai_gen_id }}
  class="ai-order-summary-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-order-summary-header-{{ ai_gen_id }}">
    <h3 class="ai-order-summary-title-{{ ai_gen_id }}">{{ block.settings.title }}</h3>
    <button
      class="ai-order-summary-toggle-{{ ai_gen_id }}"
      aria-label="Toggle order summary"
      aria-expanded="false"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <polyline points="6,9 12,15 18,9"></polyline>
      </svg>
    </button>
  </div>

  <div class="ai-order-summary-content-{{ ai_gen_id }} expanded">
    {% if cart.items.size > 0 %}
      {% for item in cart.items %}
        <div class="ai-order-summary-item-{{ ai_gen_id }}">
          <div class="ai-order-summary-item-details-{{ ai_gen_id }}">
            <h4 class="ai-order-summary-item-title-{{ ai_gen_id }}">{{ item.product.title }}</h4>
            {% if item.variant.title != 'Default Title' %}
              <p class="ai-order-summary-item-variant-{{ ai_gen_id }}">{{ item.variant.title }}</p>
            {% endif %}
            <p class="ai-order-summary-item-quantity-{{ ai_gen_id }}">Quantity: {{ item.quantity }}</p>
          </div>
          <div class="ai-order-summary-item-price-{{ ai_gen_id }}">
            {{ item.final_line_price | money }}
          </div>
        </div>
      {% endfor %}

      <div class="ai-order-summary-totals-{{ ai_gen_id }}">
        <div class="ai-order-summary-total-row-{{ ai_gen_id }}">
          <span class="ai-order-summary-total-label-{{ ai_gen_id }}">Subtotal</span>
          <span class="ai-order-summary-total-value-{{ ai_gen_id }}">{{ cart.total_price | money }}</span>
        </div>
        {% if cart.total_discounts > 0 %}
          <div class="ai-order-summary-total-row-{{ ai_gen_id }}">
            <span class="ai-order-summary-total-label-{{ ai_gen_id }}">Discounts</span>
            <span class="ai-order-summary-total-value-{{ ai_gen_id }}">-{{ cart.total_discounts | money }}</span>
          </div>
        {% endif %}
        <div class="ai-order-summary-total-row-{{ ai_gen_id }}">
          <span class="ai-order-summary-total-label-{{ ai_gen_id }}">Shipping</span>
          <span class="ai-order-summary-total-value-{{ ai_gen_id }}">{{ block.settings.shipping_text }}</span>
        </div>
        <div class="ai-order-summary-total-row-{{ ai_gen_id }}">
          <span class="ai-order-summary-total-label-{{ ai_gen_id }}">Total</span>
          <span class="ai-order-summary-total-value-{{ ai_gen_id }}">{{ cart.total_price | money }}</span>
        </div>
      </div>
    {% else %}
      <div class="ai-order-summary-item-{{ ai_gen_id }}">
        <div class="ai-order-summary-item-details-{{ ai_gen_id }}">
          <p class="ai-order-summary-item-title-{{ ai_gen_id }}">Your cart is empty</p>
        </div>
      </div>
    {% endif %}
  </div>
</order-summary-{{ ai_gen_id }}>

<script>
  (function() {
    class OrderSummary{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.header = this.querySelector('.ai-order-summary-header-{{ ai_gen_id }}');
        this.toggle = this.querySelector('.ai-order-summary-toggle-{{ ai_gen_id }}');
        this.content = this.querySelector('.ai-order-summary-content-{{ ai_gen_id }}');
        this.isExpanded = true;
      }

      connectedCallback() {
        this.setupEventListeners();
        this.handleResize();
        window.addEventListener('resize', () => this.handleResize());
      }

      setupEventListeners() {
        if (this.header && this.toggle && this.content) {
          this.header.addEventListener('click', () => {
            if (window.innerWidth >= 750) {
              this.toggleSummary();
            }
          });
        }
      }

      handleResize() {
        if (window.innerWidth < 750) {
          this.content.classList.remove('collapsed');
          this.content.classList.add('expanded');
          this.toggle.setAttribute('aria-expanded', 'true');
          this.isExpanded = true;
        } else {
          if (!this.isExpanded) {
            this.content.classList.add('collapsed');
            this.content.classList.remove('expanded');
          }
        }
      }

      toggleSummary() {
        if (window.innerWidth >= 750) {
          this.isExpanded = !this.isExpanded;
          
          if (this.isExpanded) {
            this.content.classList.remove('collapsed');
            this.content.classList.add('expanded');
            this.toggle.style.transform = 'rotate(0deg)';
          } else {
            this.content.classList.add('collapsed');
            this.content.classList.remove('expanded');
            this.toggle.style.transform = 'rotate(-90deg)';
          }
          
          this.toggle.setAttribute('aria-expanded', this.isExpanded.toString());
        }
      }
    }

    customElements.define('order-summary-{{ ai_gen_id }}', OrderSummary{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Order summary",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Order Summary"
    },
    {
      "type": "text",
      "id": "shipping_text",
      "label": "Shipping text",
      "default": "Calculated at checkout"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "secondary_text_color",
      "label": "Secondary text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e6e6e6"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Padding",
      "default": 20
    }
  ],
  "presets": [
    {
      "name": "Order summary"
    }
  ],
  "tag": null
}
{% endschema %}